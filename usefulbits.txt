class Game < ActiveRecord::Base
  validates :diff, inclusion: { in: %w(1 2 3 4 5), message: "1-5"
  belongs_to :user, class_name: 'User', foreign_key: 'user_id'
  belongs_to :user, class_name: 'User', foreign_key: 'opponent_id'
  has_many :moves
end


u1 = User.create!( name: 'Alex')
u2 = User.create!( name: 'Gerry')
u3 = User.create!( name: 'Barry')

g1 = Game.create!( user_id: u1.id, opponent_id: u2.id, diff: 1, result: 'w')
g2 = Game.create!( user_id: u3.id, opponent_id: u2.id, diff: 1, result: 'w')


m1 = g1.moves.create!(number: 1, value: 'X', user_id: 1)
m2 = g1.moves.create!(number: 2, value: '0', user_id: 1)
m3 = g1.moves.create!(number: 3, value: 'X', user_id: 1)
m4 = g1.moves.create!(number: 4, value: '0', user_id: 1)
m5 = g1.moves.create!(number: 5, value: 'X', user_id: 1)
m6 = g1.moves.create!(number: 6, value: '0', user_id: 1)
m7 = g2.moves.create!(number: 7, value: 'X', user_id: 1)
m8 = g2.moves.create!(number: 8, value: 'X', user_id: 1)

#email: 'a@a.com')
#email: 'g@g.com'
# email: 'b@b.com'

class User < ActiveRecord::Base
validates :name, uniqueness: true
has_many :Games
end


class Move < ActiveRecord::Base
  validates :value, inclusion: { in: %w(0 X), message: "Xor0 Xor0 Xor0 !!!!!"}
  validates :number, inclusion: { in: (0...9).to_a}
  belongs_to :game
end

